import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Textarea } from '@/components/ui/textarea';
import { Badge } from '@/components/ui/badge';

interface Evaluation {
  objectives?: string;
  metrics?: string;
  methods?: string;
  timeline?: string;
  stakeholders?: string;
}

interface EvaluationManagerProps {
  evaluation: Evaluation;
  onUpdate: (field: string, value: string) => void;
  title: string;
  description: string;
}

export const EvaluationManager: React.FC<EvaluationManagerProps> = ({
  evaluation,
  onUpdate,
  title,
  description
}) => {
  return (
    <div className="bg-muted/30 p-6 rounded-xl border border-border">
      <div className="mb-6">
        <h3 className="text-lg font-semibold text-foreground">{title}</h3>
        <p className="text-sm text-muted-foreground mt-1">{description}</p>
      </div>

      <div className="space-y-6">
        <Card>
          <CardHeader>
            <CardTitle className="text-base flex items-center gap-2">
              üéØ Objetivos da Avalia√ß√£o
              <Badge variant="outline" className="text-xs">
                Obrigat√≥rio
              </Badge>
            </CardTitle>
          </CardHeader>
          <CardContent>
            <Textarea
              value={evaluation.objectives || ''}
              onChange={(e) => onUpdate('objectives', e.target.value)}
              placeholder="O que voc√™ quer avaliar? Como definir√° se sua solu√ß√£o √© bem-sucedida? Quais s√£o os objetivos principais que a solu√ß√£o deve alcan√ßar?"
              rows={4}
              className="resize-none"
            />
            <div className="mt-2 text-xs text-muted-foreground">
              Dica: Conecte os objetivos com o problema original identificado na fase Engage
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader>
            <CardTitle className="text-base">üìä M√©tricas e Indicadores</CardTitle>
          </CardHeader>
          <CardContent>
            <Textarea
              value={evaluation.metrics || ''}
              onChange={(e) => onUpdate('metrics', e.target.value)}
              placeholder={`Defina m√©tricas espec√≠ficas e mensur√°veis:\n\nQuantitativas:\n‚Ä¢ N√∫mero de usu√°rios ativos\n‚Ä¢ Taxa de engajamento\n‚Ä¢ Redu√ß√£o percentual do problema\n\nQualitativas:\n‚Ä¢ Satisfa√ß√£o dos usu√°rios\n‚Ä¢ Facilidade de uso\n‚Ä¢ Impacto percebido`}
              rows={6}
              className="resize-none"
            />
            <div className="mt-2 text-xs text-muted-foreground">
              Dica: Combine m√©tricas quantitativas (n√∫meros) e qualitativas (percep√ß√µes)
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader>
            <CardTitle className="text-base">üîç M√©todos de Coleta</CardTitle>
          </CardHeader>
          <CardContent>
            <Textarea
              value={evaluation.methods || ''}
              onChange={(e) => onUpdate('methods', e.target.value)}
              placeholder="Como voc√™ coletar√° os dados para avalia√ß√£o? Pesquisas, entrevistas, observa√ß√£o, analytics, testes A/B, grupos focais, etc."
              rows={3}
              className="resize-none"
            />
            <div className="mt-2 text-xs text-muted-foreground">
              Dica: Use m√∫ltiplos m√©todos para obter uma vis√£o completa do impacto
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader>
            <CardTitle className="text-base">üìÖ Cronograma de Avalia√ß√£o</CardTitle>
          </CardHeader>
          <CardContent>
            <Textarea
              value={evaluation.timeline || ''}
              onChange={(e) => onUpdate('timeline', e.target.value)}
              placeholder="Quando e com que frequ√™ncia a avalia√ß√£o ser√° realizada? Avalia√ß√£o inicial, marcos intermedi√°rios, avalia√ß√£o final, monitoramento cont√≠nuo?"
              rows={3}
              className="resize-none"
            />
            <div className="mt-2 text-xs text-muted-foreground">
              Dica: Planeje avalia√ß√µes regulares para ajustar a solu√ß√£o durante o desenvolvimento
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader>
            <CardTitle className="text-base">üë• Stakeholders e Feedback</CardTitle>
          </CardHeader>
          <CardContent>
            <Textarea
              value={evaluation.stakeholders || ''}
              onChange={(e) => onUpdate('stakeholders', e.target.value)}
              placeholder="Quem fornecer√° feedback sobre a solu√ß√£o? Usu√°rios finais, especialistas, comunidade, gestores? Como o feedback ser√° incorporado?"
              rows={3}
              className="resize-none"
            />
            <div className="mt-2 text-xs text-muted-foreground">
              Dica: Inclua a perspectiva de todos os grupos afetados pela solu√ß√£o
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Progresso */}
      <div className="mt-6 p-4 bg-card rounded-lg border">
        <div className="flex items-center justify-between text-sm">
          <span className="text-muted-foreground">Progresso da Avalia√ß√£o:</span>
          <span className="font-medium">
            {Object.values(evaluation).filter(value => value && value.trim().length > 0).length}/5 se√ß√µes preenchidas
          </span>
        </div>
        <div className="mt-2 w-full bg-muted rounded-full h-2">
          <div 
            className="bg-primary h-2 rounded-full transition-all duration-300"
            style={{ 
              width: `${(Object.values(evaluation).filter(value => value && value.trim().length > 0).length / 5) * 100}%` 
            }}
          />
        </div>
      </div>
    </div>
  );
};