import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Textarea } from '@/components/ui/textarea';
import { Input } from '@/components/ui/input';
import { Badge } from '@/components/ui/badge';

interface Implementation {
  overview?: string;
  timeline?: string;
  resources?: string;
  team?: string;
  risks?: string;
}

interface ImplementationManagerProps {
  implementation: Implementation;
  onUpdate: (field: string, value: string) => void;
  title: string;
  description: string;
}

export const ImplementationManager: React.FC<ImplementationManagerProps> = ({
  implementation,
  onUpdate,
  title,
  description
}) => {
  return (
    <div className="bg-muted/30 p-6 rounded-xl border border-border">
      <div className="mb-6">
        <h3 className="text-lg font-semibold text-foreground">{title}</h3>
        <p className="text-sm text-muted-foreground mt-1">{description}</p>
      </div>

      <div className="space-y-6">
        <Card>
          <CardHeader>
            <CardTitle className="text-base flex items-center gap-2">
              üìã Vis√£o Geral da Implementa√ß√£o
              <Badge variant="outline" className="text-xs">
                Obrigat√≥rio
              </Badge>
            </CardTitle>
          </CardHeader>
          <CardContent>
            <Textarea
              value={implementation.overview || ''}
              onChange={(e) => onUpdate('overview', e.target.value)}
              placeholder="Descreva a estrat√©gia geral de implementa√ß√£o. Como sua solu√ß√£o ser√° constru√≠da e lan√ßada? Qual √© a abordagem de desenvolvimento?"
              rows={4}
              className="resize-none"
            />
            <div className="mt-2 text-xs text-muted-foreground">
              Dica: Pense em fases de desenvolvimento, desde o MVP at√© a vers√£o completa
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader>
            <CardTitle className="text-base">‚è∞ Cronograma e Marcos</CardTitle>
          </CardHeader>
          <CardContent>
            <Textarea
              value={implementation.timeline || ''}
              onChange={(e) => onUpdate('timeline', e.target.value)}
              placeholder={`Defina as principais etapas e prazos:\n\nFase 1 (Semanas 1-2): Prototipagem\nFase 2 (Semanas 3-4): Desenvolvimento MVP\nFase 3 (Semanas 5-6): Testes e itera√ß√£o\nFase 4 (Semanas 7-8): Lan√ßamento piloto`}
              rows={5}
              className="resize-none"
            />
            <div className="mt-2 text-xs text-muted-foreground">
              Dica: Seja realista com os prazos e inclua tempo para testes e ajustes
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader>
            <CardTitle className="text-base">üí∞ Recursos Necess√°rios</CardTitle>
          </CardHeader>
          <CardContent>
            <Textarea
              value={implementation.resources || ''}
              onChange={(e) => onUpdate('resources', e.target.value)}
              placeholder="Liste os recursos necess√°rios: or√ßamento, ferramentas, infraestrutura, software, equipamentos, etc. Inclua estimativas de custos quando poss√≠vel."
              rows={4}
              className="resize-none"
            />
            <div className="mt-2 text-xs text-muted-foreground">
              Dica: Considere tanto recursos financeiros quanto t√©cnicos e humanos
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader>
            <CardTitle className="text-base">üë• Equipe e Responsabilidades</CardTitle>
          </CardHeader>
          <CardContent>
            <Textarea
              value={implementation.team || ''}
              onChange={(e) => onUpdate('team', e.target.value)}
              placeholder="Que habilidades e pap√©is s√£o necess√°rios? Quem ser√° respons√°vel por cada √°rea? Como a equipe ser√° organizada?"
              rows={3}
              className="resize-none"
            />
            <div className="mt-2 text-xs text-muted-foreground">
              Dica: Identifique compet√™ncias necess√°rias e como obt√™-las
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader>
            <CardTitle className="text-base">‚ö†Ô∏è Riscos e Conting√™ncias</CardTitle>
          </CardHeader>
          <CardContent>
            <Textarea
              value={implementation.risks || ''}
              onChange={(e) => onUpdate('risks', e.target.value)}
              placeholder="Que riscos podem impactar a implementa√ß√£o? Como mitigar esses riscos? Quais s√£o os planos de conting√™ncia?"
              rows={3}
              className="resize-none"
            />
            <div className="mt-2 text-xs text-muted-foreground">
              Dica: Antecipe problemas t√©cnicos, financeiros e de prazo
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Progresso */}
      <div className="mt-6 p-4 bg-card rounded-lg border">
        <div className="flex items-center justify-between text-sm">
          <span className="text-muted-foreground">Progresso do Planejamento:</span>
          <span className="font-medium">
            {Object.values(implementation).filter(value => value && value.trim().length > 0).length}/5 se√ß√µes preenchidas
          </span>
        </div>
        <div className="mt-2 w-full bg-muted rounded-full h-2">
          <div 
            className="bg-primary h-2 rounded-full transition-all duration-300"
            style={{ 
              width: `${(Object.values(implementation).filter(value => value && value.trim().length > 0).length / 5) * 100}%` 
            }}
          />
        </div>
      </div>
    </div>
  );
};